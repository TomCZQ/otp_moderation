import { AccountDto, ApexPlayerInfoDto, ChallengeConfigInfoDto, ChampionInfo, ChampionMasteryDto, CurrentGameInfo, FeaturedGames, LeagueEntryDTO, LeagueListDTO, MatchDto, PlatformDataDto, PlayerDto, PlayerInfoDto, SummonerDTO, TeamDto, TournamentDto } from './dtos';
import { GetChallengeLeaderboardsInput, GetTopChampionMasteriesInput, LeagueEntryInput, MatchIdsInput } from './inputs';
import { GeneralRegion, RiotRateLimiter } from './rate-limiter';
export declare function createEndpoints(limiter: RiotRateLimiter): {
    '/riot/account/v1/accounts/by-puuid/{puuid}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<AccountDto>>;
    };
    '/riot/account/v1/accounts/by-riot-id/{gameName}/{tagLine}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<AccountDto>>;
    };
    '/riot/account/v1/accounts/me': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<AccountDto>>;
    };
    '/riot/account/v1/active-shards/by-game/{game}/by-puuid/{puuid}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<any>>;
    };
    '/lol/champion-mastery/v4/champion-masteries/by-puuid/{encryptedPUUID}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<ChampionMasteryDto[]>>;
    };
    '/lol/champion-mastery/v4/champion-masteries/by-puuid/{encryptedPUUID}/by-champion/{championId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<ChampionMasteryDto>>;
    };
    '/lol/champion-mastery/v4/champion-masteries/by-puuid/{encryptedPUUID}/top': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get({ query }: GetTopChampionMasteriesInput): Promise<import("axios").AxiosResponse<ChampionMasteryDto[]>>;
    };
    '/lol/champion-mastery/v4/scores/by-puuid/{encryptedPUUID}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<number>>;
    };
    '/lol/platform/v3/champion-rotations': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<ChampionInfo>>;
    };
    '/lol/clash/v1/players/by-summoner/{summonerId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<PlayerDto[]>>;
    };
    '/lol/clash/v1/teams/{teamId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<TeamDto>>;
    };
    '/lol/clash/v1/tournaments': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<TournamentDto[]>>;
    };
    '/lol/clash/v1/tournaments/by-team/{teamId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<TournamentDto>>;
    };
    '/lol/clash/v1/tournaments/{tournamentId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<TournamentDto>>;
    };
    '/lol/league-exp/v4/entries/{queue}/{tier}/{division}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get({ query }: LeagueEntryInput): Promise<import("axios").AxiosResponse<LeagueEntryDTO[]>>;
    };
    '/lol/league/v4/challengerleagues/by-queue/{queue}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<LeagueListDTO>>;
    };
    '/lol/league/v4/entries/by-summoner/{encryptedSummonerId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<LeagueEntryDTO[]>>;
    };
    '/lol/league/v4/entries/{queue}/{tier}/{division}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get({ query }: LeagueEntryInput): Promise<import("axios").AxiosResponse<LeagueEntryDTO[]>>;
    };
    '/lol/league/v4/grandmasterleagues/by-queue/{queue}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<LeagueListDTO>>;
    };
    '/lol/league/v4/leagues/{leagueId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<LeagueListDTO>>;
    };
    '/lol/league/v4/masterleagues/by-queue/{queue}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<LeagueListDTO>>;
    };
    '/lol/challenges/v1/challenges/config': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<ChallengeConfigInfoDto[]>>;
    };
    '/lol/challenges/v1/challenges/percentiles': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<Record<number, Record<number, Record<any, number>>>>>;
    };
    '/lol/challenges/v1/challenges/{challengeId}/config': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<ChallengeConfigInfoDto>>;
    };
    '/lol/challenges/v1/challenges/{challengeId}/leaderboards/by-level/{level}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get({ query }: GetChallengeLeaderboardsInput): Promise<import("axios").AxiosResponse<ApexPlayerInfoDto[]>>;
    };
    '/lol/challenges/v1/challenges/{challengeId}/percentiles': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<Record<any, number>>>;
    };
    '/lol/challenges/v1/player-data/{puuid}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<PlayerInfoDto>>;
    };
    '/lol/status/v4/platform-data': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<PlatformDataDto>>;
    };
    '/lol/match/v5/matches/by-puuid/{puuid}/ids': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get({ query }: MatchIdsInput): Promise<import("axios").AxiosResponse<string[]>>;
    };
    '/lol/match/v5/matches/{matchId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<MatchDto>>;
    };
    '/lol/match/v5/matches/{matchId}/timeline': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<any>>;
    };
    '/lol/spectator/v5/active-games/by-summoner/{encryptedPUUID}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<CurrentGameInfo>>;
    };
    '/lol/spectator/v5/featured-games': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<FeaturedGames>>;
    };
    '/fulfillment/v1/summoners/by-puuid/{rsoPUUID}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<SummonerDTO>>;
    };
    '/lol/summoner/v4/summoners/by-account/{encryptedAccountId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<SummonerDTO>>;
    };
    '/lol/summoner/v4/summoners/by-name/{summonerName}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<SummonerDTO>>;
    };
    '/lol/summoner/v4/summoners/by-puuid/{encryptedPUUID}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<SummonerDTO>>;
    };
    '/lol/summoner/v4/summoners/me': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<SummonerDTO>>;
    };
    '/lol/summoner/v4/summoners/{encryptedSummonerId}': (generalRegion: GeneralRegion, realPath: string, path: string) => {
        get(): Promise<import("axios").AxiosResponse<SummonerDTO>>;
    };
};
