import { Queue, Tier, Division } from './enums';
export type NotMentioned = any;
export type ChallengeInfo = NotMentioned;
export type ChallengePonumbers = NotMentioned;
export type PlayerClientPreferences = NotMentioned;
export type ActiveShardDto = NotMentioned;
export type MatchTimelineDto = NotMentioned;
export type AccountDto = {
    puuid: string;
    gameName: string;
    tagLine: string;
};
export type ChampionMasteryDto = {
    puuid: string;
    championPointsUntilNextLevel: number;
    chestGranted: boolean;
    championId: number;
    lastPlayTime: number;
    championLevel: number;
    summonerId: string;
    championPoints: number;
    championPointsSinceLastLevel: number;
    tokensEarned: number;
};
export type ChampionInfo = {
    maxNewPlayerLevel: number;
    freeChampionIdsForNewPlayers: number[];
    freeChampionIds: number[];
};
export type PlayerDto = {
    summonerId: string;
    position: string;
    role: string;
};
export type ClashTeamDto = {
    id: string;
    tournamentId: number;
    name: string;
    iconId: number;
    tier: Tier;
    captain: string;
    abbreviation: string;
    players: PlayerDto[];
};
export type TournamentDto = {
    id: number;
    themeId: number;
    nameKey: string;
    nameKeySecondary: string;
    schedule: TournamentPhaseDto[];
};
export type TournamentPhaseDto = {
    id: number;
    registrationTime: number;
    startTime: number;
    cancelled: boolean;
};
export type LeagueEntryDTO = {
    leagueId: string;
    summonerId: string;
    summonerName: string;
    queueType: Queue;
    tier: Tier;
    rank: Division;
    leaguePoints: number;
    wins: number;
    losses: number;
    hotStreak: boolean;
    veteran: boolean;
    freshBlood: boolean;
    inactive: boolean;
    miniSeries?: MiniSeriesDTO;
};
export type MiniSeriesDTO = {
    losses: number;
    progress: string;
    target: number;
    wins: number;
};
export type LeagueListDTO = {
    leagueId: string;
    entries: LeagueItemDTO[];
    tier: Tier;
    name: string;
    queue: Queue;
};
export type LeagueItemDTO = {
    freshBlood: boolean;
    wins: number;
    summonerName: string;
    miniSeries: MiniSeriesDTO;
    inactive: boolean;
    veteran: boolean;
    hotStreak: boolean;
    rank: Division;
    leaguePoints: number;
    losses: number;
    summonerId: string;
};
export type ChallengeConfigInfoDto = {
    id: number;
    localizedNames: Record<string, Record<string, string>>;
    state: State;
    tracking: Tracking;
    startTimestamp: number;
    endTimestamp: number;
    leaderboard: boolean;
    thresholds: Record<string, number>;
};
export type State = NotMentioned;
export type Tracking = NotMentioned;
export type ApexPlayerInfoDto = {
    puuid: string;
    value: number;
    position: number;
};
export type Level = NotMentioned;
export type PlayerInfoDto = {
    challenges: ChallengeInfo[];
    preferences: PlayerClientPreferences;
    totalPoints: ChallengePonumbers;
    categoryPoints: Record<string, ChallengePonumbers>;
};
export type PlatformDataDto = {
    id: string;
    name: string;
    locales: string[];
    maintenances: StatusDto[];
    incidents: StatusDto[];
};
export type StatusDto = {
    id: number;
    maintenance_status: string;
    incident_severity: string;
    titles: ContentDto[];
    updates: UpdateDto[];
    created_at: string;
    archive_at: string;
    updated_at: string;
    platforms: string[];
};
export type ContentDto = {
    locale: string;
    content: string;
};
export type UpdateDto = {
    id: number;
    author: string;
    publish: boolean;
    publish_locations: string[];
    translations: ContentDto[];
    created_at: string;
    updated_at: string;
};
export type MatchDto = {
    metadata: MetadataDto;
    info: InfoDto;
};
export type MetadataDto = {
    dataVersion: string;
    matchId: string;
    participants: string[];
};
export type InfoDto = {
    endOfGameResult: string;
    gameCreation: number;
    gameDuration: number;
    gameEndTimestamp: number;
    gameId: number;
    gameMode: string;
    gameName: string;
    gameStartTimestamp: number;
    gameType: string;
    gameVersion: string;
    mapId: number;
    participants: ParticipantDto[];
    platformId: string;
    queueId: number;
    teams: TeamDto[];
    tournamentCode: string;
};
export type ParticipantDto = {
    assists: number;
    baronKills: number;
    bountyLevel: number;
    champExperience: number;
    champLevel: number;
    championId: number;
    championName: string;
    championTransform: number;
    consumablesPurchased: number;
    damageDealtToBuildings: number;
    damageDealtToObjectives: number;
    damageDealtToTurrets: number;
    damageSelfMitigated: number;
    deaths: number;
    detectorWardsPlaced: number;
    doubleKills: number;
    dragonKills: number;
    firstBloodAssist: boolean;
    firstBloodKill: boolean;
    firstTowerAssist: boolean;
    firstTowerKill: boolean;
    gameEndedInEarlySurrender: boolean;
    gameEndedInSurrender: boolean;
    goldEarned: number;
    goldSpent: number;
    individualPosition: string;
    inhibitorKills: number;
    inhibitorTakedowns: number;
    inhibitorsLost: number;
    item0: number;
    item1: number;
    item2: number;
    item3: number;
    item4: number;
    item5: number;
    item6: number;
    itemsPurchased: number;
    killingSprees: number;
    kills: number;
    lane: string;
    largestCriticalStrike: number;
    largestKillingSpree: number;
    largestMultiKill: number;
    longestTimeSpentLiving: number;
    magicDamageDealt: number;
    magicDamageDealtToChampions: number;
    magicDamageTaken: number;
    neutralMinionsKilled: number;
    nexusKills: number;
    nexusTakedowns: number;
    nexusLost: number;
    objectivesStolen: number;
    objectivesStolenAssists: number;
    participantId: number;
    pentaKills: number;
    perks: PerksDto;
    physicalDamageDealt: number;
    physicalDamageDealtToChampions: number;
    physicalDamageTaken: number;
    playerAugment1: number;
    playerAugment2: number;
    playerAugment3: number;
    playerAugment4: number;
    playerSubteamId: number;
    profileIcon: number;
    puuid: string;
    quadraKills: number;
    riotIdName: string;
    riotIdTagline: string;
    role: string;
    sightWardsBoughtInGame: number;
    spell1Casts: number;
    spell2Casts: number;
    spell3Casts: number;
    spell4Casts: number;
    summoner1Casts: number;
    summoner1Id: number;
    summoner2Casts: number;
    summoner2Id: number;
    summonerId: string;
    summonerLevel: number;
    summonerName: string;
    teamEarlySurrendered: boolean;
    teamId: number;
    teamPosition: string;
    timeCCingOthers: number;
    timePlayed: number;
    totalDamageDealt: number;
    totalDamageDealtToChampions: number;
    totalDamageShieldedOnTeammates: number;
    totalDamageTaken: number;
    totalHeal: number;
    totalHealsOnTeammates: number;
    totalMinionsKilled: number;
    totalTimeCCDealt: number;
    totalTimeSpentDead: number;
    totalUnitsHealed: number;
    tripleKills: number;
    trueDamageDealt: number;
    trueDamageDealtToChampions: number;
    trueDamageTaken: number;
    turretKills: number;
    turretTakedowns: number;
    turretsLost: number;
    unrealKills: number;
    visionScore: number;
    visionWardsBoughtInGame: number;
    wardsKilled: number;
    wardsPlaced: number;
    win: boolean;
};
export type PerksDto = {
    statPerks: PerkStatsDto;
    styles: PerkStyleDto[];
};
export type PerkStatsDto = {
    defense: number;
    flex: number;
    offense: number;
};
export type PerkStyleDto = {
    description: string;
    selections: PerkStyleSelectionDto[];
    style: number;
};
export type PerkStyleSelectionDto = {
    perk: number;
    var1: number;
    var2: number;
    var3: number;
};
export type TeamDto = {
    bans: BanDto[];
    objectives: ObjectivesDto;
    teamId: number;
    win: boolean;
};
export type BanDto = {
    championId: number;
    pickTurn: number;
};
export type ObjectivesDto = {
    baron: ObjectiveDto;
    champion: ObjectiveDto;
    dragon: ObjectiveDto;
    inhibitor: ObjectiveDto;
    riftHerald: ObjectiveDto;
    tower: ObjectiveDto;
};
export type ObjectiveDto = {
    first: boolean;
    kills: number;
};
export type CurrentGameInfo = {
    gameId: number;
    gameType: string;
    gameStartTime: number;
    mapId: number;
    gameLength: number;
    platformId: string;
    gameMode: string;
    bannedChampions: BannedChampion[];
    gameQueueConfigId?: number;
    observers: Observer;
    participants: CurrentGameParticipant[];
};
export type BannedChampion = {
    pickTurn: number;
    championId: number;
    teamId: number;
};
export type Observer = {
    encryptionKey: string;
};
export type CurrentGameParticipant = {
    championId: number;
    perks: Perks;
    profileIconId: number;
    bot: boolean;
    teamId: number;
    summonerName: string;
    summonerId: string;
    puuid: string;
    spell1Id: number;
    spell2Id: number;
    gameCustomizationObjects: GameCustomizationObject[];
};
export type Perks = {
    perkIds: number[];
    perkStyle: number;
    perkSubStyle: number;
};
export type GameCustomizationObject = {
    category: string;
    content: string;
};
export type FeaturedGames = {
    gameList: FeaturedGameInfo[];
    clientRefreshInterval: number;
};
export type FeaturedGameInfo = {
    gameMode: string;
    gameLength: number;
    mapId: number;
    gameType: string;
    bannedChampions: BannedChampion[];
    gameId: number;
    observers: Observer;
    gameQueueConfigId: number;
    participants: Participant[];
    platformId: string;
};
export type Participant = {
    bot: boolean;
    spell2Id: number;
    profileIconId: number;
    summonerName: string;
    summonerId: string;
    puuid: string;
    championId: number;
    teamId: number;
    spell1Id: number;
};
export type SummonerDTO = {
    accountId: string;
    profileIconId: number;
    revisionDate: number;
    name: string;
    id: string;
    puuid: string;
    summonerLevel: number;
};
