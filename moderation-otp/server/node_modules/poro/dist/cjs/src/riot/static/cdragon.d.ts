import { Version, VersionLanguage } from './utils';
export declare const CDRAGON_DOMAIN = "cdn.communitydragon.org";
export declare const RAW_CDRAGON_DOMAIN = "raw.communitydragon.org";
type ChampionId = string;
type ChampionKey = number | string;
type ChampionIDorKey = ChampionId | ChampionKey;
type SkinId = number | string;
type HonorId = number | string;
type ProfileIconId = number | string;
type WardId = number | string;
declare class Champion extends Version {
    private readonly urlPrefix;
    squareIconPlaceholder: string;
    squareIcon(championIDorKey: ChampionIDorKey): string;
    championData(championIDorKey: ChampionIDorKey): string;
    baseSplashArt(championIDorKey: ChampionIDorKey): string;
    splashArtWithSkin(championIDorKey: ChampionIDorKey, skinId: SkinId): string;
    baseCenteredSplashArt(championIDorKey: ChampionIDorKey): string;
    centeredSplashArtWithSkin(championIDorKey: ChampionIDorKey, skinId: SkinId): string;
    baseTile(championIDorKey: ChampionIDorKey): string;
    tileWithSkin(championIDorKey: ChampionIDorKey, skinId: SkinId): string;
    basePortrait(championIDorKey: ChampionIDorKey): string;
    portraitWithSkin(championIDorKey: ChampionIDorKey, skinId: SkinId): string;
    passiveIcon(championIDorKey: ChampionIDorKey): string;
    qAbilityIcon(championIDorKey: ChampionIDorKey): string;
    wAbilityIcon(championIDorKey: ChampionIDorKey): string;
    eAbilityIcon(championIDorKey: ChampionIDorKey): string;
    ultimateAbilityIcon(championIDorKey: ChampionIDorKey): string;
}
declare class ChampionSelect extends Version {
    private readonly urlPrefix;
    banSound(championIDorKey: ChampionIDorKey): string;
    lockinSound(championIDorKey: ChampionIDorKey): string;
    backgroundSound(championIDorKey: ChampionIDorKey): string;
}
declare class Summoner extends Version {
    private readonly urlPrefix;
    honorEmblemPlaceholder: string;
    honorEmblem(honorId: HonorId): string;
    lockedHonorEmblem(honorId: HonorId): string;
    honorEmblemWithCheckpoints(honorId: HonorId, level: number): string;
    profileIcon(profileIconId: ProfileIconId): string;
}
declare class Game extends Version {
    private readonly urlPrefix;
    wardIcon(wardId: WardId): string;
    wardShadow(wardId: WardId): string;
}
type MetaFile = 'queues';
export declare class CommunityDragon extends VersionLanguage {
    constructor(version: string, language: string);
    champion: Champion;
    championSelect: ChampionSelect;
    summoner: Summoner;
    game: Game;
    meta(file: MetaFile): string;
    tier(tier: string): string;
}
export {};
